name: Handle Application Report

on:
  issues:
    types: [opened]

permissions: write-all

jobs:
  clamav:
    name: ClamAV Scan

    outputs:
      data: ${{ steps.upload.outputs.result }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Start ClamAV daemon clamd
        uses: toblux/start-clamd-github-action@v0.2.1
        with: # Custom inputs are optional (these are the default values)
          unix_socket: /tmp/clamd.socket
          tcp_port: 3310
          stream_max_length: 1M

      - name: Ping clamd on TCP port 3310
        run: echo PING | nc localhost 3310

      - name: Ping clamd using the Unix socket
        run: echo PING | nc -U /tmp/clamd.socket

      - name: Write GitHub event to file
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            fs.writeFileSync("./event.json", JSON.stringify(context.payload));

      - name: Installing Dependencies and run bot
        run: |
          sudo systemctl stop clamav-freshclam.service
          sudo freshclam || true
          sudo systemctl start clamav-freshclam.service

          sudo /etc/init.d/clamav-daemon start

          npm i -g pnpm
          pnpm install

          node issue.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEBHOOK: ${{ secrets.WEBHOOK_URL }}

      - name: Upload Output
        uses: actions/github-script@v7
        id: upload
        with:
          result-encoding: string
          script: |
            const fs = require('fs');

            return fs.readFileSync("./oldscan.json").toString();

  windows:
    needs: [clamav]
    runs-on: windows-latest

    name: Scan using Windows Defender & Report

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Write GitHub event to file
        uses: actions/github-script@v7
        env:
          DATA: ${{ needs.clamav.outputs.data }}
        with:
          script: |
            const fs = require('fs');

            fs.writeFileSync("./event.json", JSON.stringify(context.payload));
            fs.writeFileSync("./oldscan.json", process.env.DATA);

      - name: Run
        shell: pwsh
        run: |
          Remove-MpPreference -ExclusionPath (Get-MpPreference).ExclusionPath
          Set-Service -Name wuauserv -StartupType Manual -Status Running

          C:\"Program Files\Windows Defender\MpCmdRun.exe" -SignatureUpdate

          npm i -g pnpm
          pnpm install

          node issue_win32.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEBHOOK: ${{ secrets.WEBHOOK_URL }}
          BOT_TOKEN: ${{ secrets.DISCORD_TOKEN }}

      - name: Update Database
        uses: EndBug/add-and-commit@v9
        continue-on-error: true
        with:
          pull: true
          message: "Update Reports"
